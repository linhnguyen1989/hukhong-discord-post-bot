// modules/tiktokWatcher.js
const TikTokScraper = require('tiktok-scraper');
const fs = require('fs');
const path = require('path');

module.exports = function initTikTokWatcher(client, options) {
  const { username, channelId } = options;
  // 24 gi·ªù = 24 * 60 * 60 * 1000 = 86,400,000 ms
  const interval = 24 * 60 * 60 * 1000;
  const savePath = path.join(__dirname, `last_${username}.json`);

  // ƒê·ªçc ID video cu·ªëi c√πng ƒë√£ g·ª≠i (n·∫øu c√≥)
  let lastVideoId = null;
  if (fs.existsSync(savePath)) {
    try {
      const data = JSON.parse(fs.readFileSync(savePath, 'utf8'));
      lastVideoId = data.lastVideoId || null;
    } catch {
      lastVideoId = null;
    }
  }

  async function checkTikTok() {
    try {
      console.log(`[TikTokWatcher] ƒêang ki·ªÉm tra k√™nh @${username}...`);
      const posts = await TikTokScraper.user(username, { number: 1 });
      const latest = posts.collector[0];
      if (!latest) return console.warn(`[TikTokWatcher] Kh√¥ng t√¨m th·∫•y video n√†o.`);

      if (latest.id !== lastVideoId) {
        const channel = client.channels.cache.get(channelId);
        if (channel) {
          const embed = {
            color: 0x00ffff,
            title: `üé¨ Video m·ªõi t·ª´ @${username}`,
            description: latest.text || '(Kh√¥ng c√≥ m√¥ t·∫£)',
            url: latest.webVideoUrl,
            image: { url: latest.covers.default },
          };

          await channel.send({ embeds: [embed] });
          console.log(`[TikTokWatcher] G·ª≠i video m·ªõi: ${latest.webVideoUrl}`);
        }

        // L∆∞u l·∫°i ID video m·ªõi nh·∫•t
        lastVideoId = latest.id;
        fs.writeFileSync(savePath, JSON.stringify({ lastVideoId }));
      } else {
        console.log(`[TikTokWatcher] Kh√¥ng c√≥ video m·ªõi t·ª´ @${username}.`);
      }
    } catch (err) {
      console.error(`[TikTokWatcher] L·ªói khi ki·ªÉm tra @${username}:`, err.message);
    }
  }

  console.log(`[TikTokWatcher] Theo d√µi @${username} ‚Äî ki·ªÉm tra m·ªói 24 gi·ªù.`);
  checkTikTok();
  setInterval(checkTikTok, interval);
};
